|00 @System &vector $2 &pad $6 &r $2 &g $2 &b $2 &debug $1 &state $1
|10 @Console &vector $2 &read $1 &pad $5 &write $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|80 @Controller &vector $2 &button $1 &key $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &wheel $1
|a0 @File &vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

%DEBUG { CR #01 .System/debug DEO }
%HALT { #01 .System/state DEO }
%EMIT { .Console/write DEO }

%DEC2 { #0001 SUB2 }
%NOT2 { #0000 EQU2 }
%GEQ2 { LTH2 NOT2 }

%CR { #0a EMIT }
%SPACE { #20 EMIT }

%C_0 { #30 }
%C_9 { #39 }
%C_: { #3a }
%C_a { #61 }
%C_f { #66 }
%C_{ { #7b }

%K_ESC { #1b }

%null { #00 }
%newline { #0a }
%space { #20 }
%escape { #1b }

|0000
@in $2
@here $2
@dictptr $2
@base $2


|0100
  ;hello ;println JSR2

  #00
  ;hello ;bye ;string-equal JSR2
  ;assert-equal-u8 JSR2

  #01
  ;hello ;hello ;string-equal JSR2
  ;assert-equal-u8 JSR2

  ;bye ;println JSR2
BRK

@assert-equal-u8 ( u8 u8 -- )
  DUP2
  ;print-byte JSR2
  space EMIT
  ;print-byte JSR2
  space EMIT

  ;highlight-result JSR2
  CR

JMP2r


@highlight-result ( u8 -- )
  NEQ ,&fail JCN
&pass
  ;text-green JSR2
  ;pass ;print-str JSR2
  ,&end JMP

&fail
  ;text-red JSR2
  ;fail ;print-str JSR2

&end
  ;text-reset JSR2
JMP2r


@text-reset ( -- )
  ;&data ;print-str JSR2
JMP2r
&data 1b "[0m 00


@text-green ( -- )
  ;&data ;print-str JSR2
JMP2r
&data 1b "[32m 00


@text-red ( -- )
  ;&data ;print-str JSR2
JMP2r
&data 1b "[31m 00


@hello "hello 00
@bye "bye 00
@pass "pass 00
@fail "fail 00

~string.tal
@Error/invalid-char "invalid-char 00

