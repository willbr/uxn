~header.tal

|0100
  ;forth-init JSR2

  ;hello ;println JSR2

  ;test-lookup JSR2
  (
  ;test-read-word JSR2
  ;test-create-word JSR2
  )

  ;bye ;println JSR2

  HALT
BRK

~debug.tal

@test-lookup
  ;&test1 ;lookup JSR2
  ;Builtin-emit
  ;assert-equal-u16 JSR2

  ;&test2 ;lookup JSR2
  ;Builtin-print-tos
  ;assert-equal-u16 JSR2

  ;&test3 ;lookup JSR2
  ;Builtin-print-stack
  ;assert-equal-u16 JSR2
JMP2r
&test1 04 "emit 00
&test2 01 ". 00
&test3 02 ".s 00


@test-create-word

  .here-pos LDZ2 ;&here STA2
  ;&new-word ;create-word JSR2
  ( ;&here LDA2 #0e ;dump JSR2 )

  .here-pos LDZ2
  ( DUP2 ;print-short JSR2 CR )
  ;&here LDA2 #000c ADD2
  ;assert-equal-u16 JSR2

JMP2r
&new-word 08 "new-word 00
&here $2


@test-read-word
  ;tib .in STZ2
  ;&line1 #0e ;tib ;memcpy JSR2

  ( ;tib #0a ;dump JSR2 )

  ;read-word JSR2
  ( DUP2 #0a ;dump JSR2 )
  ( DUP2 ;println JSR2 )
  DUP2
  ;&one ;string-equal JSR2
  true ;assert-equal-u8 JSR2

  ;&two ;string-equal JSR2
  false ;assert-equal-u8 JSR2

  ;read-word JSR2
  ( DUP2 ;println JSR2 )
  DUP2
  ;&one ;string-equal JSR2
  false ;assert-equal-u8 JSR2

  ;&two ;string-equal JSR2
  true ;assert-equal-u8 JSR2

  ;read-word JSR2
  ( DUP2 ;println JSR2 )
  ;&three ;string-equal JSR2
  true ;assert-equal-u8 JSR2

  ;read-word JSR2
  ;&null ;string-equal JSR2
  true ;assert-equal-u8 JSR2
JMP2r

0f &line1 "one 20 "two 20 "three 00
&null  00 00
&one   03 "one 00
&two   03 "two 00
&three 05 "three 00


@hello 05 "hello 00
@bye   04 "bye 00


~test.tal
~forth.tal

