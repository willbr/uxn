
|00 @system  [ &vector $2 &pad $6 &r $2 &g $2 &b $2 &debug $1 &state $1 ]
|20 @screen  [ &vector $2 &width $2 &height $2 &pad $2 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1 ]
|80 @controller [ &vector $2 &button $1 &key $1 ]

%up    { #10 }
%down  { #20 }
%left  { #40 }
%right { #80 }

%HALT { #010f DEO }
%DEC  { #01 SUB }
%DEC2 { #0001 SUB2 }

|0000
@a
&x $2
&y $2

|0100
    ( 128 x 128 )
    (
    #0080 .screen/width  DEO2
    #0080 .screen/height DEO2
    )

    #01ff .system/r DEO2
    #0f0f .system/g DEO2
    #020f .system/b DEO2

    ;frame .screen/vector DEO2
    ;on-key .controller/vector DEO2

    #0040 #0040 #00 ;set-xy JSR2

BRK


@on-key
.controller/key DEI
#1b NEQ ,&end JCN
HALT
&end
BRK


@frame
    ( TODO clear )

    ;check-buttons JSR2

    (
        update array
        a[i].x=a[i].x*0.8+a[i-1].x*0.2 )

    ;update JSR2

    ;render JSR2
BRK

@update
JMP2r


@render
    ( #00 ;draw-sprite JSR2 )

    #00 ;draw-sprite JSR2
    #01 ;draw-sprite JSR2
JMP2r


@draw-sprite
    ;get-xy JSR2
    ;paint-sprite JSR2
JMP2r


@get-pointer ( i -- addr )
    #00 SWP #0004 MUL2
    ;a ADD2
JMP2r


@get-xy ( i -- x y )
    ;get-pointer JSR2
    STH2k

    LDA2
    STH2r #0002 ADD2
    LDA2
JMP2r


@set-xy ( x y i -- )
    ;get-pointer JSR2
    STH2k
    #0002 ADD2 STA2
    STH2r STA2
JMP2r


@paint-sprite ( x y -- )
    .screen/y DEO2
    .screen/x DEO2
    ;sprite .screen/addr DEO2
    #c1 .screen/sprite DEO
JMP2r


@check-buttons
    .controller/button DEI

    DUP up AND #00 EQU ,&test-down JCN
      ;a/y LDA2 DEC2 ;a/y STA2
    &test-down
    DUP down AND #00 EQU ,&test-left JCN
      ;a/y LDA2 INC2 ;a/y STA2
    &test-left
    DUP left AND #00 EQU ,&test-right JCN
      ;a/x LDA2 DEC2 ;a/x STA2
    &test-right
    DUP right AND #00 EQU ,&test-end JCN
      ;a/x LDA2 INC2 ;a/x STA2
    &test-end

JMP2r


@clear
    0000 0000 0000 0000

( 1f2 is green )
@sprite
    003c 7e7e 7e7e 3c00 0000 1c1c 0000 0000

